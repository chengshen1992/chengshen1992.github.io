[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quantitative Pharmacology and Pharmacometrics Research Lab",
    "section": "",
    "text": "Our research interest is in the field of pharmacometrics. Our aim is to use quantitative pharmacology methods to enhance precision therapeutics and facilitate efficient drug development. More specifically, we take advantage of modeling and simulation approaches to:\n\nElucidate the dose-exposure-response relationships of therapeutics, identifying and quantifying the sources of variability in pharmacokinetics and pharmacodynamics (PK/PD).\n\nUnderstand disease progression and mechanism of drug actions.\n\nStrategically guide the design of future studies that assess drug safety and efficacy, thereby facilitating more efficient drug development.\n\nOur lab is part of the Department of Experimental and Clinical Pharmacology (ECP) at the University of Minnesota College of Pharmacy.\n \n  \n   \n  \n    \n     Graduate Program\n  \n  \n    \n     Location\n  \n  \n    \n     Email"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blogs",
    "section": "",
    "text": "Use Finch Studio on MSI\n\n\n\n\n\n\nworkflow\n\n\ncode\n\n\n\n\n\n\n\n\n\nNov 26, 2024\n\n\nShen Cheng and Mohamed Ismail\n\n\n\n\n\n\n\n\n\n\n\n\nCreate reproducible PMx workflow at MSI\n\n\n\n\n\n\nworkflow\n\n\ncode\n\n\n\n\n\n\n\n\n\nNov 26, 2024\n\n\nShen Cheng and Mutaz Jaber\n\n\n\n\n\n\n\n\n\n\n\n\nConnect MSI with Visual Studio Code over SSH\n\n\n\n\n\n\nworkflow\n\n\n\n\n\n\n\n\n\nJun 15, 2024\n\n\nShen Cheng\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Reproducible_PMX_workflow/index.html",
    "href": "posts/Reproducible_PMX_workflow/index.html",
    "title": "Create reproducible PMx workflow at MSI",
    "section": "",
    "text": "Pharmacometric (PMx) research usually involves computationally intensive modeling and simulation processes. High performance computing (HPC) systems provided by Minnesota Supercomputing Institute (MSI) serves as a valuable platform to perform PMx research. This blog post illustrates a strategy for constructing a collaborative, reproducible and manageable PMx workflow at MSI, leveraging several open-source tools in R."
  },
  {
    "objectID": "posts/Reproducible_PMX_workflow/index.html#use-project-abc-as-a-template",
    "href": "posts/Reproducible_PMX_workflow/index.html#use-project-abc-as-a-template",
    "title": "Create reproducible PMx workflow at MSI",
    "section": "3.1 Use project-abc as a template",
    "text": "3.1 Use project-abc as a template\nStep 1: Navigating to template project workflow (project-abc). Click Use this template, and create a project directory with an appropriate owner and project name.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 2: git clone the repository into MSI Rstudio server. To do this:\n\nCopy the string as indicated in the screenshot (if ssh has been configured for your account, use SSH option, otherwise, use HTTPS option).\n\n\n\n\n\n\n\nGo back to your workflow, navigate to the appropriate directory in the terminal.\nEnter git clone git@github.umn.edu:cheng423/project-xyz.git in the terminal. An output similar to what is shown below indicating the repository is cloned successfully.\n\n```{bash}\nCloning into 'project-xyz'...\nremote: Enumerating objects: 52, done.\nremote: Counting objects: 100% (52/52), done.\nremote: Compressing objects: 100% (43/43), done.\nremote: Total 52 (delta 4), reused 34 (delta 2), pack-reused 0\nReceiving objects: 100% (52/52), 2.92 MiB | 15.24 MiB/s, done.\nResolving deltas: 100% (4/4), done.\nUpdating files: 100% (43/43), done.\n```\nStep 3: navigate inside the newly cloned github repository, then rename the .Rproj file to make it consistent with the repository name. After renaming, open the .Rproj.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4: install R packages. The R packages in the template project is managed by renv. Run renv::restore() in the R console to restore all R package installation according to renv.lock. This might take a few minutes to install all the packages.\nYou can directly jump to to explore how NONMEM is ran at MSI if a project template is used and successfully configured."
  },
  {
    "objectID": "posts/Reproducible_PMX_workflow/index.html#build-a-project-directory-from-scratch",
    "href": "posts/Reproducible_PMX_workflow/index.html#build-a-project-directory-from-scratch",
    "title": "Create reproducible PMx workflow at MSI",
    "section": "3.2 Build a project directory from scratch",
    "text": "3.2 Build a project directory from scratch\n\n3.2.1. Build a Github repository\nGithub is a useful tool for collaborative coding, facilitating both code review and management. University of Minnesota provides complimentary access to GitHub Enterprise for all students and employees possessing an active Internet ID. Establishing a GitHub repository can significantly improve the efficiency and collaborative experience of a PMx project. While this blog post will not provide a detailed GitHub tutorial, those interested in a comprehensive exploration of its capabilities are encouraged to consult this document for further information. Briefly,\nStep 1: Registering / signing in University of Minnesota GitHub Enterprise. Initialize a new GitHub repository (i.e, project-abc) by clicking “New repository” tab. Then, specify the settings (e.g., name, visibility, etc) and create the repository.\n\n\n\n\n\n\n\n\n\n\nStep 2: If you have already set up your GitHub SSH key. Clone the repository into your MSI Rstudio Server session through “terminal” using the SSH option as shown below. Other options such as HTTP and GITHUB CLI are also available but will not be covered in this blog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 3: After git clone, the GitHub repository you created should appear in your MSI disk. You can now interact with your GitHub repository and replies on it to synchronize your work with your collaborators.\n\n\n3.2.2. Using renv for package version control\n\n\n\n\n\nrenv is a useful package to create reproducible environment for each R project. Instead of using library of R packages installed globally for every project. renv allows you to create project specific library to ensure the package version consistent across an R project.\n\n\nStep 1: Create an R project\nTo use renv, You need to create an R project (.Rproj) in the cloned GitHub repository.\n\n\n\n\n\n\nStep 2: Initialize renv\nIn your R console, type in renv::init() to initialize the structure of the R environment using renv.\n\n\n\n\n\n\n\nThe structure of the environment includes:\n\n.Rprofile: R session automatically runs this script every time you open this R project (i.e., project-abc.Rproj), this ensures the automatic activation of renv.\nrenv/library: the project specific R package library.\nrenv.lock: a record of R packages installed, including all the dependencies.\n\nStep 3: Install packages\nUsing renv, we can install R packages using renv::install(). For example:\n\nrenv::install(\"mrgsolve\") will install mrgsolve package from CRAN\n\nrenv::install(\"metrumresearchgroup/bbr\") will install latest bbr package from GitHub of metrumresearchgroup\n\nHere, I want to install 5 packages into my project folder:\n\nmrgsolve from CRAN.\ntidyverse from CRAN.\nnmrec from GitHub of metrumresearchgroup.\nbbr from GitHub of metrumresearchgroup.\nhere from CRAN.\n\nI can install them by running:\n```{r}\nrenv::install(\"mrgsolve\", \n              \"tidyverse\", \n              \"metrumresearchgroup/nmrec\",\n              \"metrumresearchgroup/bbr\", \n              \"here\")\n```\nWhen asked whether you want to proceed, simply answer Y (yes) to proceed to the next step. The installation might take a while depending on the size of the packages, whether these packages were cached and the configuration of the Rstudio session. When the installation finishes, you should see all the requested packages installed in the renv/library directory.\nStep 4: Create a snapshot of the installed packages\nrenv::snapshot() allows you to create a snapshot of the installed packages, which enables your collaborators to use renv::restore() to restore the same R packages with the same version from the same source in their Rstudio Server session This would ensure the project reproducibility.\nTo accomplish this, we need to first create a new R script library.R in the project directory. This script does nothing but simply library all the packages installed.\nExample code for library.R:\n```{r}\nlibrary(mrgsolve)\nlibrary(tidyverse)\nlibrary(nmrec)\nlibrary(bbr)\nlibrary(here)\n```\nSubsequently, we can run renv::snapshot() in the R console. This will update the renv.lock file in the project folder.\nUsing GitHub to synchronize your renv.lock file with your collaborators, they should now be able to install the same version of packages in their Rstudio Server session using renv::restore() according to the updated renv.lock. Similarly, if they update renv.lock on their end, you could also run renv::restore() to restore their installation."
  },
  {
    "objectID": "posts/Reproducible_PMX_workflow/index.html#sec-projdir1",
    "href": "posts/Reproducible_PMX_workflow/index.html#sec-projdir1",
    "title": "Create reproducible PMx workflow at MSI",
    "section": "3.1 Use project-abc as a template",
    "text": "3.1 Use project-abc as a template\nStep 1: Navigate to template project workflow (project-abc). Click Use this template, and then create a project directory with an appropriate owner and user-defined project name.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 2: git clone the repository into MSI Rstudio server. To do this:\n\nCopy the string for repository cloning as indicated in the screenshot (if ssh has been configured for your account, use SSH option, otherwise, use HTTPS option).\n\n\n\n\n\n\n\nGo back to your workflow, navigate to the desired directory in the terminal.\nClone the repository using the copied string (e.g., git clone git@github.umn.edu:cheng423/project-xyz.git) in the terminal. An output similar to what is shown below indicates the repository has been cloned successfully.\n\n```{bash}\nCloning into 'project-xyz'...\nremote: Enumerating objects: 52, done.\nremote: Counting objects: 100% (52/52), done.\nremote: Compressing objects: 100% (43/43), done.\nremote: Total 52 (delta 4), reused 34 (delta 2), pack-reused 0\nReceiving objects: 100% (52/52), 2.92 MiB | 15.24 MiB/s, done.\nResolving deltas: 100% (4/4), done.\nUpdating files: 100% (43/43), done.\n```\nStep 3: navigate inside the newly cloned github repository, then rename the .Rproj file to make it consistent with the repository name. After renaming, open the .Rproj file. This will restart your R session and initialize the desired R project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4: install R packages. The R packages in the template project is managed by renv. Run renv::restore() in the R console to restore all the package installations according to renv.lock. The package installation might take a few minutes to finish.\nYou can directly jump to section 4. Run NONMEM using bbi to explore how to operate NONMEM at MSI following this step."
  },
  {
    "objectID": "posts/Reproducible_PMX_workflow/index.html#sec-projdir2",
    "href": "posts/Reproducible_PMX_workflow/index.html#sec-projdir2",
    "title": "Create reproducible PMx workflow at MSI",
    "section": "3.2 Build a project directory from scratch",
    "text": "3.2 Build a project directory from scratch\n\n3.2.1. Build a Github repository\nGithub is a useful tool for collaborative coding, facilitating both code review and management. University of Minnesota provides complimentary access to GitHub Enterprise for all students and employees possessing an active Internet ID. Establishing a GitHub repository can significantly improve the efficiency and collaborative experience of a PMx project. While this blog post will not provide a detailed GitHub tutorial, those interested in a comprehensive exploration of its capabilities are encouraged to consult this document for further information. Briefly,\nStep 1: Registering / signing in University of Minnesota GitHub Enterprise. Initialize a new GitHub repository (i.e, project-abc) by clicking “New repository” tab. Then, specify the settings (e.g., name, visibility, etc) and create the repository.\n\n\n\n\n\n\n\n\n\n\nStep 2: If you have already set up your GitHub SSH key. Clone the repository into your MSI Rstudio Server session through “terminal” using the SSH option as shown below. Other options such as HTTPS and GITHUB CLI are also available but will not be covered in this blog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 3: After git clone, the GitHub repository you created should appear in your MSI disk. You can now interact with your GitHub repository and replies on it to synchronize your work with your collaborators.\n\n\n3.2.2. Using renv for package version control\n\n\n\n\n\nrenv is a useful package to create reproducible environment for each R project. Instead of using library of R packages installed globally for every project. renv allows you to create project specific library to ensure the package version consistent across the duration of an R project.\n\n\nStep 1: Create an R project\nTo use renv, You need to create an R project (.Rproj) in the cloned GitHub repository.\n\n\n\n\n\n\nStep 2: Initialize renv\nIn your R console, type in renv::init() to initialize the structure of the R environment using renv.\n\n\n\n\n\n\n\nThe structure of the environment includes:\n\n.Rprofile: R session automatically runs this script every time you open this R project (i.e., project-abc.Rproj), this ensures the automatic activation of renv.\nrenv/library: the project specific R package library.\nrenv.lock: a record of R packages installed, including all the dependencies.\n\nStep 3: Install packages\nUsing renv, we can install R packages using renv::install(). For example:\n\nrenv::install(\"mrgsolve\") will install mrgsolve package from CRAN\n\nrenv::install(\"metrumresearchgroup/bbr\") will install latest bbr package from GitHub of metrumresearchgroup\n\nHere, I want to install 5 packages into my project folder:\n\nmrgsolve from CRAN.\ntidyverse from CRAN.\nnmrec from GitHub of metrumresearchgroup.\nbbr from GitHub of metrumresearchgroup.\nhere from CRAN.\n\nI can install them by running:\n```{r}\nrenv::install(\"mrgsolve\", \n              \"tidyverse\", \n              \"metrumresearchgroup/nmrec\",\n              \"metrumresearchgroup/bbr\", \n              \"here\")\n```\nWhen asked whether you want to proceed, simply answer Y (yes) to proceed to the next step. The installation might take a while depending on the size of the packages, whether these packages were cached and the configuration of the Rstudio session. When the installation finishes, you should see all the requested packages installed in the renv/library directory.\nStep 4: Create a snapshot of the installed packages\nrenv::snapshot() allows you to create a snapshot of the installed packages, which enables your collaborators to use renv::restore() to restore the same R packages with the same version from the same source in their Rstudio Server session This would ensure the project reproducibility.\nTo accomplish this, we need to first create a new R script library.R in the project directory. This script does nothing but simply library all the packages installed.\nExample code for library.R:\n```{r}\nlibrary(mrgsolve)\nlibrary(tidyverse)\nlibrary(nmrec)\nlibrary(bbr)\nlibrary(here)\n```\nSubsequently, we can run renv::snapshot() in the R console. This will update the renv.lock file in the project folder.\nUsing GitHub to synchronize your renv.lock file with your collaborators, they should now be able to install the same version of packages in their Rstudio Server session using renv::restore() according to the updated renv.lock. Similarly, if they update renv.lock on their end, you could also run renv::restore() to restore their installation."
  },
  {
    "objectID": "posts/vscode_ssh/index.html",
    "href": "posts/vscode_ssh/index.html",
    "title": "Connect MSI with Visual Studio Code over SSH",
    "section": "",
    "text": "Visual Studio Code (VScode) is a useful source code editor to interact with Minnesota Supercomputing Institute (MSI). This blog illustrate you how to connect VScode with MSI through Remote-SSH.\n\n1. Set up SSH key for the remote communication with MSI\nFollow the tutorial specified by MSI to setup SSH key in your local computer.\n\n\n2. Create ~/.ssh/config in the local machine\nRun this in terminal,\n```{bash}\ncd ~/.ssh\nls\n```\nIf you can see file config in the output, then it means config has already been created in your local machine.\nIf you cannot see config in the output, run this in terminal,\n```{bash}\ntouch ~/.ssh/config\n```\n\n\n3. Add MSI front-end server as a new SSH host\nOpen config, copy and paste the following scripts. Replace your.msi.username with your X500 and save it.\n```{bash}\nHost agate.msi.umn.edu\nHostName agate.msi.umn.edu\nUser your.msi.username\nIdentityFile ~/.ssh/id_rsa\n```\n\n\n4. Connect to VPN\nMSI can only be accessed when\n\nYou are connected to eduroam network on campus.\nYou are off campus but connecting to the University’s Virtual Private Network (VPN). Please make sure when selecting a channel for connection, do NOT select the channel named “UMN - Departmental Pools”.\n\n\n\n\n\n\n\n\n5. Connect VScode with MSI\n\nUnder tab “Extension”, install extension “remote-ssh”\n\n\n\n\n\n\n\nOnce installed, you will be able to see this icon on the very bottom left corner of your VScode window.\n\n\n\n\n\n\n\nClick the icon, select “connect current window to host”. You should be able to see the agate.msi.umn.edu if MSI SSH was correctly added to the ~/.ssh/config file. Select agate.msi.umn.edu and wait for a few seconds.\n\n\n\n\n\n\n\nEntering your passphrase (set up in the SSH key in Step 1)\n\n\n\n\n\n\n\nGoing through the two-factor authentication as instructed.\n\n\n\n\n\n\n\nOnce connection is established, you will be able to see the ssh connection icon on the very bottom left corner of your VScode window shows your MSI hostname.\n\n\n\n\n\n\n\nYou can now use VScode to navigate through the working directories on MSI, and use the MSI terminal. Installing relevant extensions in VScode can also make your work more efficient. For example, installing nonmem syntax highlighter through VScode can more efficiently visualize a NONMEM script."
  },
  {
    "objectID": "posts/FinchStudio_msi/index.html",
    "href": "posts/FinchStudio_msi/index.html",
    "title": "Use Finch Studio on MSI",
    "section": "",
    "text": "Finch Studio is an innovative modeling workbench to perform pharmacometric analyses. Constructing together with Mohamed Ismail from Enhanced Pharmacodynamics (ePD), this blog is illustating how to use Finch Studio on Minnesota Supercomputing Institute (MSI). The example project used for this blog tutorial has been shared in a UMN GHE repository."
  },
  {
    "objectID": "posts/FinchStudio_msi/index.html#set-up-ssh-key-for-the-remote-communication-with-msi",
    "href": "posts/FinchStudio_msi/index.html#set-up-ssh-key-for-the-remote-communication-with-msi",
    "title": "Use Finch Studio on MSI",
    "section": "1.1 Set up SSH key for the remote communication with MSI",
    "text": "1.1 Set up SSH key for the remote communication with MSI\nFollow the tutorial specified by MSI to setup SSH key in your local computer."
  },
  {
    "objectID": "posts/FinchStudio_msi/index.html#create-.sshconfig-in-the-local-machine",
    "href": "posts/FinchStudio_msi/index.html#create-.sshconfig-in-the-local-machine",
    "title": "Use Finch Studio on MSI",
    "section": "1.2 Create ~/.ssh/config in the local machine",
    "text": "1.2 Create ~/.ssh/config in the local machine\nRun this in terminal,\n```{bash}\ncd ~/.ssh\nls\n```\nIf you can see file config in the output, then it means config has already been created in your local machine.\nIf you cannot see config in the output, run this in terminal,\n```{bash}\ntouch ~/.ssh/config\n```"
  },
  {
    "objectID": "posts/FinchStudio_msi/index.html#add-msi-front-end-server-as-a-new-ssh-host",
    "href": "posts/FinchStudio_msi/index.html#add-msi-front-end-server-as-a-new-ssh-host",
    "title": "Use Finch Studio on MSI",
    "section": "1.3 Add MSI front-end server as a new SSH host",
    "text": "1.3 Add MSI front-end server as a new SSH host\nOpen config, copy and paste the following scripts. Replace your.msi.username with your X500 and save it.\n```{bash}\nHost agate.msi.umn.edu\nHostName agate.msi.umn.edu\nUser your.msi.username\nIdentityFile ~/.ssh/id_rsa\n```"
  },
  {
    "objectID": "posts/FinchStudio_msi/index.html#connect-to-vpn",
    "href": "posts/FinchStudio_msi/index.html#connect-to-vpn",
    "title": "Use Finch Studio on MSI",
    "section": "1.4 Connect to VPN",
    "text": "1.4 Connect to VPN\nMSI can only be accessed when\n\nYou are connected to eduroam network on campus.\nYou are off campus but connecting to the University’s Virtual Private Network (VPN). Please make sure when selecting a channel for connection, do NOT select the channel named “UMN - Departmental Pools”."
  },
  {
    "objectID": "people/gras/diqin_yan.html",
    "href": "people/gras/diqin_yan.html",
    "title": "Diqin Yan",
    "section": "",
    "text": "Diqin is a PhD student in Experimental and Clinical Pharmacology under the guidance of Dr. Cheng. She earned her Master’s and Bachelor’s degrees in Clinical Pharmacy from Peking University and Sichuan University, respectively. Her research interest focuses on mechanistic pharmacokinetic-pharmacodynamic (PK-PD) modeling and simulation to advance model-informed precise dosing in clinical drug use."
  },
  {
    "objectID": "people/gras/diqin_yan.html#biography",
    "href": "people/gras/diqin_yan.html#biography",
    "title": "Diqin Yan",
    "section": "",
    "text": "Diqin is a PhD student in Experimental and Clinical Pharmacology under the guidance of Dr. Cheng. She earned her Master’s and Bachelor’s degrees in Clinical Pharmacy from Peking University and Sichuan University, respectively. Her research interest focuses on mechanistic pharmacokinetic-pharmacodynamic (PK-PD) modeling and simulation to advance model-informed precise dosing in clinical drug use."
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "Principal Invesigator\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people.html#graduate-students",
    "href": "people.html#graduate-students",
    "title": "People",
    "section": "Graduate Students",
    "text": "Graduate Students\n\n\n\n\n\n\n\n\n\n\nDiqin Yan\n\n\nPhD Student\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people/pi/shen_cheng.html",
    "href": "people/pi/shen_cheng.html",
    "title": "Shen Cheng, Ph.D.",
    "section": "",
    "text": "I am a Research Scientist in the field of pharmacometrics. I am currently working as an Assistant Professor in Pharmacometrics at the Department of Experimental and Clinical Pharmacology (ECP), University of Minnesota College of Pharmacy. I am passionate about the development and implementation of innovative pharmacometric methodologies to address clinical needs for the accomplishment of precision medicine.\n\n\n\n\nPh.D. in Experimental and Clinical Pharmacology (minor in Biostatistics) University of Minnesota, MN (2017-2021)\nM.S. in Pharmacology University of Michigan, MI (2015-2017)\nB.S. in Biology Soochow University, China (2010-2014)\n\n\n \n  \n   \n  \n    \n     Email\n  \n  \n    \n     Github\n  \n  \n    \n     CV\n  \n  \n    \n     Linkedin\n  \n  \n    \n     Twitter"
  },
  {
    "objectID": "people.html#principal-investigator",
    "href": "people.html#principal-investigator",
    "title": "People",
    "section": "",
    "text": "Principal Invesigator\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "people/gras/diqin_yan.html#bio",
    "href": "people/gras/diqin_yan.html#bio",
    "title": "Diqin Yan",
    "section": "",
    "text": "Diqin is a PhD student in Experimental and Clinical Pharmacology under the guidance of Dr. Cheng. She earned her Master’s and Bachelor’s degrees in Clinical Pharmacy from Peking University and Sichuan University, respectively. Her research interest focuses on mechanistic pharmacokinetic-pharmacodynamic (PK-PD) modeling and simulation to advance model-informed precise dosing in clinical drug use."
  },
  {
    "objectID": "people/pi/shen_cheng.html#bio",
    "href": "people/pi/shen_cheng.html#bio",
    "title": "Shen Cheng, Ph.D.",
    "section": "",
    "text": "I am a Research Scientist in the field of pharmacometrics. I am currently working as an Assistant Professor in Pharmacometrics at the Department of Experimental and Clinical Pharmacology (ECP), University of Minnesota College of Pharmacy. I am passionate about the development and implementation of innovative pharmacometric methodologies to address clinical needs for the accomplishment of precision medicine."
  },
  {
    "objectID": "people/pi/shen_cheng.html#education",
    "href": "people/pi/shen_cheng.html#education",
    "title": "Shen Cheng, Ph.D.",
    "section": "",
    "text": "Ph.D. in Experimental and Clinical Pharmacology (minor in Biostatistics) University of Minnesota, MN (2017-2021)\nM.S. in Pharmacology University of Michigan, MI (2015-2017)\nB.S. in Biology Soochow University, China (2010-2014)"
  },
  {
    "objectID": "teaching/ecp8506.html",
    "href": "teaching/ecp8506.html",
    "title": "ECP8506 Clinical Trial Simulations",
    "section": "",
    "text": "Precision medicine is an emerging field aiming to customize the patients’ treatment plans according to individual characteristics. Recently, the rapid growth of the discipline of quantitative pharmacology (i.e., pharmacometrics) facilitates the realization of precision medicine.\nExtensively diving into the concepts of pharmacometric simulations, this course will explore how model-based strategies can drive quantitative decision-making in either clinical drug research or personalized therapeutics. Students will gain familiarity with contemporary pharmacometric tools, including various software suites and computational platforms. Throughout the course, participants will be asked to attend lecture series, perform hands-on simulation exercises based on hypothetical clinical scenarios, participate in small group discussions, and learn real-world case studies of model-informed drug development (MIDD) and model-informed precision dosing (MIPD)."
  },
  {
    "objectID": "teaching/ecp8506.html#course-overview",
    "href": "teaching/ecp8506.html#course-overview",
    "title": "ECP8506 Clinical Trial Simulations",
    "section": "",
    "text": "Precision medicine is an emerging field aiming to customize the patients’ treatment plans according to individual characteristics. Recently, the rapid growth of the discipline of quantitative pharmacology (i.e., pharmacometrics) facilitates the realization of precision medicine.\nExtensively diving into the concepts of pharmacometric simulations, this course will explore how model-based strategies can drive quantitative decision-making in either clinical drug research or personalized therapeutics. Students will gain familiarity with contemporary pharmacometric tools, including various software suites and computational platforms. Throughout the course, participants will be asked to attend lecture series, perform hands-on simulation exercises based on hypothetical clinical scenarios, participate in small group discussions, and learn real-world case studies of model-informed drug development (MIDD) and model-informed precision dosing (MIPD)."
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teaching",
    "section": "",
    "text": "Course Overview\nPrecision medicine is an emerging field aiming to customize the patients’ treatment plans according to individual characteristics. Recently, the rapid growth of the discipline of quantitative pharmacology (i.e., pharmacometrics) facilitates the realization of precision medicine. Diving into the concepts of pharmacometric simulations, this course explores how model-based strategies can drive quantitative decision-making in either clinical drug research or personalized therapeutics.\n\nMaterials\n\n2024 Fall"
  },
  {
    "objectID": "teaching.html#ecp8506-clinical-trial-simulations",
    "href": "teaching.html#ecp8506-clinical-trial-simulations",
    "title": "Teaching",
    "section": "",
    "text": "Course Overview\nPrecision medicine is an emerging field aiming to customize the patients’ treatment plans according to individual characteristics. Recently, the rapid growth of the discipline of quantitative pharmacology (i.e., pharmacometrics) facilitates the realization of precision medicine. Diving into the concepts of pharmacometric simulations, this course explores how model-based strategies can drive quantitative decision-making in either clinical drug research or personalized therapeutics.\n\nMaterials\n\n2024 Fall"
  },
  {
    "objectID": "teaching.html#course-overview",
    "href": "teaching.html#course-overview",
    "title": "Teaching",
    "section": "",
    "text": "Precision medicine is an emerging field aiming to customize the patients’ treatment plans according to individual characteristics. Recently, the rapid growth of the discipline of quantitative pharmacology (i.e., pharmacometrics) facilitates the realization of precision medicine. Diving into the concepts of pharmacometric simulations, this course will explore how model-based strategies can drive quantitative decision-making in either clinical drug research or personalized therapeutics. Students will gain familiarity with contemporary pharmacometric tools, including various software suites and computational platforms. Throughout the course, participants will be asked to attend lecture series, perform hands-on simulation exercises based on hypothetical clinical scenarios, participate in small group discussions, and learn real-world case studies of model-informed drug development (MIDD) and model-informed precision dosing (MIPD)."
  },
  {
    "objectID": "teaching.html#github-repository",
    "href": "teaching.html#github-repository",
    "title": "Teaching",
    "section": "",
    "text": "2024 Fall"
  },
  {
    "objectID": "research.html#methdological",
    "href": "research.html#methdological",
    "title": "Research",
    "section": "Methdological",
    "text": "Methdological"
  },
  {
    "objectID": "research.html#methdological-research",
    "href": "research.html#methdological-research",
    "title": "Research",
    "section": "Methdological Research",
    "text": "Methdological Research\nEvaluate and develop methodologies to incorporate high-dimensional covariates in pharmacometric analysis: The variability of drug exposure and response is hardly attributable to a single source, such as the presence of a single genetic mutant or a single type of bacteria. The complex nature of genomics and microbiome data (e.g., high-dimensionality) presents significant challenges for effective integration into pharmacometric analyses. In line with our clinical research interests in the field of pharmacogenomics and pharmacomicrobiome, our lab is interested in evaluating existing methodologies and developing new methodologies for the incorporation of high-dimensional data into pharmacometric frameworks."
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Our research adopts advanced pharmacometric and statistical modeling and simulation techniques to investigate the dose-exposure-response relationship of therapeutics. We develop, evaluate and implement pharmacokinetics-pharmacodynamics (PK-PD) and exposure-response models across a range of clinical and translational topics. These efforts support various purposes, such as enabling precise dosing of medicines (i.e., Model-Informed Precision Dosing, MIPD) and facilitating efficient drug development (i.e., Model-Informed Drug Development, MIDD). Additionally, we are interested in developing innovative methodologies that enhance the efficiency of future pharmacometric analyses and address the limitations of existing approaches."
  },
  {
    "objectID": "research.html#clinical-and-translational-research",
    "href": "research.html#clinical-and-translational-research",
    "title": "Research",
    "section": "Clinical and Translational Research",
    "text": "Clinical and Translational Research\nCortisol PK-PD and exposure-response in pediatric patients with congenital adrenal hyperplasia (CAH): CAH is a rare endocrine disorder characterized by impaired cortisol synthesis. Hydrocortisone is commonly prescribed for managing CAH in pediatric patients. Collaborating with clinicians, we are actively developing integrated pharmacometric models to characterize the dispositions of hydrocortisone and associated biomarkers. These models are subsequently used as tools to explore the exposure-response relationships using clinically relevant endpoints. Ultimately, this research aims to tailor hydrocortisone dosing to the individual needs of pediatric patients, enhancing clinical outcomes.\nModel-based approaches to identify and quantify the impact of pharmacogenomics and pharmacomicrobiomes on drug exposures and drug-drug interactions (DDIs): Genomics and microbiome are crucial sources of variability in pharmacokinetics and pharmacodynamics. We aim to elucidate and quantify their effects under pharmacometric modeling frameworks, facilitating the clinical implementation of these biomarkers to guide precision therapeutics. We are also interested in exploiting disparate sources of real world data (e.g., electronic health records) to empower our analyses. In collaboration with several clinical pharmacologists, our ongoing projects focus on transplantation and infectious diseases."
  },
  {
    "objectID": "teaching.html#pharmacometrics-coffee-break",
    "href": "teaching.html#pharmacometrics-coffee-break",
    "title": "Teaching",
    "section": "Pharmacometrics Coffee Break",
    "text": "Pharmacometrics Coffee Break\nAn informal pharmacometric discussion group involving a diverse group of moderators, presenters and audience.If you are interested in participating, please contact Shen Cheng (cheng423@umn.edu).\n\n\n\n\n\n\n2025\n\n\n\n\n\n\n\n\nDate\nTopic\nModerator\n\n\n\n\n03/14/2025\nTopic discussion\nShen\n\n\n03/28/2025\nPK\nxxx\n\n\n04/11/2025\nPD\nyyy\n\n\n\n\n\n\n\n\n\n\n\n\n2026"
  }
]